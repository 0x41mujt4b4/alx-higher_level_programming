>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> b = BaseGeometry()
>>> b.area()
Traceback (most recent call last):
  File "<pyshell#55>", line 1, in <module>
    b.area()
  File "<pyshell#53>", line 4, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> b.integer_validator('ali', 'a')
Traceback (most recent call last):
  File "<pyshell#56>", line 1, in <module>
    b.integer_validator('ali', 'a')
  File "<pyshell#53>", line 7, in integer_validator
    raise TypeError("<name> must be an integer")
TypeError: <name> must be an integer
>>> b.integer_validator('ali', 5)
>>> b.integer_validator('ali', 0)
Traceback (most recent call last):
  File "<pyshell#58>", line 1, in <module>
    b.integer_validator('ali', 0)
  File "<pyshell#53>", line 9, in integer_validator
    raise ValueError("<name> must be greater than 0")
ValueError: <name> must be greater than 0
>>> b.integer_validator('ali', -4)
Traceback (most recent call last):
  File "<pyshell#59>", line 1, in <module>
    b.integer_validator('ali', -4)
  File "<pyshell#53>", line 9, in integer_validator
    raise ValueError("<name> must be greater than 0")
ValueError: <name> must be greater than 0
>>> b.integer_validator('ali')
Traceback (most recent call last):
  File "<pyshell#60>", line 1, in <module>
    b.integer_validator('ali')
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> b.integer_validator()
Traceback (most recent call last):
  File "<pyshell#61>", line 1, in <module>
    b.integer_validator()
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
